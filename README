# Elevator Management System using Django Rest Framework

The Elevator Management System is a web application built using Django Rest Framework (DRF) that allows users to create elevator systems, insert elevators into the systems, create elevator requests, process the requests, and check the elevator directions. This README file provides an overview of the project, installation instructions, API documentation, and other relevant information.

## Table of Contents

- [Project Overview](#project-overview)
- [Installation](#installation)


## Project Overview

The Elevator Management System is designed to manage elevators in a building or multiple buildings. It offers a set of APIs to interact with the system and perform various actions, including creating elevator systems, adding elevators to the systems, creating elevator requests, processing the requests, and checking elevator directions.

### Features

- Create elevator systems with different configurations.
- Add elevators to the created systems with specific details such as working status , availability status , current floor, etc.
- Create elevator requests, specifying the desired floor and direction (up or down).
- Process elevator requests based on elevator availability and proximity.
- Check the direction of each elevator (up, down, or idle) in real-time.

## Installation

Follow these steps to set up the Elevator Management System on your local machine:

1. Clone the repository:

   ```bash
   git clone https://github.com/Rohit3986/Elevator-Management-System
   cd elevator-management-system
   ```

2. Create a virtual environment and activate it:

   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install the required dependencies:

   ```bash
   pip install -r requirements.txt
   ```

4. Perform database migrations:

   ```bash
   python manage.py migrate
   ```

5. Run the development server:

   ```bash
   python manage.py runserver
   ```

The Elevator Management System should now be accessible at `http://127.0.0.1:8000/`.

